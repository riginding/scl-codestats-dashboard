{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/ryan/programming/now_test/pages/index.js\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Batman TV Shows\"), props.totalXP, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data, res2, data2;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return fetch('https://codestats.net/api/users/riginding');\n\n        case 8:\n          res2 = _context.sent;\n          _context.next = 11;\n          return res2.json();\n\n        case 11:\n          data2 = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            }),\n            totalXP: data2.total_xp\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/ryan/programming/now_test/pages/index.js"],"names":["Link","fetch","Index","props","totalXP","shows","map","show","id","name","getInitialProps","res","json","data","res2","data2","console","log","length","entry","total_xp"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGA,KAAK,CAACC,OAFT,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAHF,CADY;AAAA,CAAd;;AAgBAP,KAAK,CAACQ,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJT,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBU,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAAA;AAAA,iBAGHZ,KAAK,CAAC,2CAAD,CAHF;;AAAA;AAGhBa,UAAAA,IAHgB;AAAA;AAAA,iBAIFA,IAAI,CAACF,IAAL,EAJE;;AAAA;AAIhBG,UAAAA,KAJgB;AAMtBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCJ,IAAI,CAACK,MAA9C;AANsB,2CAQf;AACLb,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAa,KAAK;AAAA,qBAAIA,KAAK,CAACZ,IAAV;AAAA,aAAd,CADF;AAELH,YAAAA,OAAO,EAAEW,KAAK,CAACK;AAFV,WARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAcA,eAAelB,KAAf","sourcesContent":["import Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = (props) => (\n  <div>\n    <h1>Batman TV Shows</h1>\n    {props.totalXP}\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n  const res2 = await fetch('https://codestats.net/api/users/riginding')\n  const data2 = await res2.json()\n\n  console.log(`Show data fetched. Count: ${data.length}`)\n\n  return {\n    shows: data.map(entry => entry.show),\n    totalXP: data2.total_xp\n  }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}