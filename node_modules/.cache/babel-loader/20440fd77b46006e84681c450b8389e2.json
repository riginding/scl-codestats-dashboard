{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/ryan/programming/now_test/pages/index.js\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { LineChart, Line } from 'recharts';\nvar data = [{\n  name: 'Page A',\n  uv: 400,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 700,\n  pv: 3000,\n  amt: 2400\n}];\nvar renderLineChart = React.createElement(LineChart, {\n  width: 400,\n  height: 400,\n  data: data,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(Line, {\n  type: \"monotone\",\n  dataKey: \"uv\",\n  stroke: \"#8884d8\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}));\n\nvar Index = function Index(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, renderLineChart(), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Batman TV Shows\"), props.totalXP, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data, res2, data2;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return fetch('https://codestats.net/api/users/riginding');\n\n        case 8:\n          res2 = _context.sent;\n          _context.next = 11;\n          return res2.json();\n\n        case 11:\n          data2 = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            }),\n            totalXP: data2.total_xp,\n            options: {\n              chart: {\n                id: 'apexchart-example'\n              },\n              xaxis: {\n                categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\n              }\n            },\n            series: [{\n              name: 'series-1',\n              data: [30, 40, 45, 50, 49, 60, 70, 91]\n            }]\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/ryan/programming/now_test/pages/index.js"],"names":["Link","fetch","LineChart","Line","data","name","uv","pv","amt","renderLineChart","Index","props","totalXP","shows","map","show","id","getInitialProps","res","json","res2","data2","console","log","length","entry","total_xp","options","chart","xaxis","categories","series"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport { LineChart, Line } from 'recharts';\nconst data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}, {name: 'Page B', uv: 700, pv: 3000, amt: 2400}];\nconst renderLineChart = (\n    <LineChart width={400} height={400} data={data}>\n      <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n    </LineChart>\n  );\n  \n\nconst Index = (props) => (\n  <div>\n    {renderLineChart()}\n\n    <h1>Batman TV Shows</h1>\n    {props.totalXP}\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n  const res2 = await fetch('https://codestats.net/api/users/riginding')\n  const data2 = await res2.json()\n\n  console.log(`Show data fetched. Count: ${data.length}`)\n\n  return {\n    shows: data.map(entry => entry.show),\n    totalXP: data2.total_xp,\n    options: {\n        chart: {\n          id: 'apexchart-example'\n        },\n        xaxis: {\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\n        }\n    },\n    series: [{\n        name: 'series-1',\n        data: [30, 40, 45, 50, 49, 60, 70, 91]\n    }]\n  }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}