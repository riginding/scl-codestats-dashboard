{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/ryan/programming/now_test/pages/index.js\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { BarChart, Bar, YAxis, XAxis, LabelList, ResponsiveContainer } from 'recharts';\n\nvar Index = function Index(props) {\n  return React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(BarChart, {\n    width: 1000,\n    height: 500,\n    data: props.data,\n    layout: \"vertical\",\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    tickLine: false,\n    hide: true,\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    tickLine: false,\n    hide: true,\n    type: \"category\",\n    dataKey: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"totalXP\",\n    fill: \"#82ca9d\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(LabelList, {\n    dataKey: \"name\",\n    position: \"insideLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(LabelList, {\n    dataKey: \"totalXP\",\n    position: \"insideRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var userNames, fetchData, userStats;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          userNames = ['riginding', 'madfist', 'theanswer'];\n          _context.next = 3;\n          return _Promise.all(userNames.map(function (user) {\n            return fetch(\"https://codestats.net/api/users/\".concat(user));\n          }));\n\n        case 3:\n          fetchData = _context.sent;\n          _context.next = 6;\n          return _Promise.all(fetchData.map(function (userData) {\n            return userData.json();\n          }));\n\n        case 6:\n          userStats = _context.sent;\n          userStats = userStats.map(function (stat) {\n            return {\n              name: stat.user,\n              totalXP: stat.total_xp\n            };\n          }).sort(function (apple, banana) {\n            return banana.totalXP - apple.totalXP;\n          });\n          return _context.abrupt(\"return\", {\n            data: userStats\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/ryan/programming/now_test/pages/index.js"],"names":["Link","fetch","BarChart","Bar","YAxis","XAxis","LabelList","ResponsiveContainer","Index","props","data","top","right","left","bottom","getInitialProps","userNames","all","map","user","fetchData","userData","json","userStats","stat","name","totalXP","total_xp","sort","apple","banana"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,QADF,EACYC,GADZ,EACiBC,KADjB,EACwBC,KADxB,EAC+BC,SAD/B,EAC0CC,mBAD1C,QAEO,UAFP;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,IADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEA,KAAK,CAACC,IAHd;AAIE,IAAA,MAAM,EAAC,UAJT;AAKE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE,CADC;AACEC,MAAAA,KAAK,EAAE,EADT;AACaC,MAAAA,IAAI,EAAE,EADnB;AACuBC,MAAAA,MAAM,EAAE;AAD/B,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,KAAjB;AAAwB,IAAA,IAAI,EAAE,IAA9B;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE,KAAjB;AAAwB,IAAA,IAAI,EAAE,IAA9B;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAoD,IAAA,OAAO,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,MAAnB;AAA0B,IAAA,QAAQ,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,SAAnB;AAA6B,IAAA,QAAQ,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,CADJ,CADY;AAAA,CAAd;;AAqBAN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,SADgB,GACJ,CAAC,WAAD,EAAc,SAAd,EAAyB,WAAzB,CADI;AAAA;AAAA,iBAEE,SAAQC,GAAR,CAAYD,SAAS,CAACE,GAAV,CAAc,UAAAC,IAAI;AAAA,mBAAIlB,KAAK,2CAAoCkB,IAApC,EAAT;AAAA,WAAlB,CAAZ,CAFF;;AAAA;AAEhBC,UAAAA,SAFgB;AAAA;AAAA,iBAGA,SAAQH,GAAR,CAAYG,SAAS,CAACF,GAAV,CAAc,UAACG,QAAD,EAAc;AAC5D,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,WAFiC,CAAZ,CAHA;;AAAA;AAGlBC,UAAAA,SAHkB;AAMtBA,UAAAA,SAAS,GAAGA,SAAS,CAACL,GAAV,CAAc,UAAAM,IAAI,EAAI;AAChC,mBAAO;AACLC,cAAAA,IAAI,EAAED,IAAI,CAACL,IADN;AAELO,cAAAA,OAAO,EAAEF,IAAI,CAACG;AAFT,aAAP;AAID,WALW,EAKTC,IALS,CAKJ,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACzB,mBAAOA,MAAM,CAACJ,OAAP,GAAiBG,KAAK,CAACH,OAA9B;AACD,WAPW,CAAZ;AANsB,2CAgBf;AACLhB,YAAAA,IAAI,EAAEa;AADD,WAhBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAqBA,eAAef,KAAf","sourcesContent":["import Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport {\n  BarChart, Bar, YAxis, XAxis, LabelList, ResponsiveContainer\n} from 'recharts';\n\nconst Index = (props) => (\n  <ResponsiveContainer>\n      <BarChart\n        width={1000}\n        height={500}\n        data={props.data}\n        layout=\"vertical\"\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <XAxis tickLine={false} hide={true} type=\"number\"/>\n        <YAxis tickLine={false} hide={true} type=\"category\" dataKey=\"name\" />\n        <Bar dataKey=\"totalXP\" fill=\"#82ca9d\">\n          <LabelList dataKey=\"name\" position=\"insideLeft\" />\n          <LabelList dataKey=\"totalXP\" position=\"insideRight\" />\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n)\n\nIndex.getInitialProps = async function() {\n  const userNames = ['riginding', 'madfist', 'theanswer']\n  const fetchData = await Promise.all(userNames.map(user => fetch(`https://codestats.net/api/users/${user}`)))\n  let userStats = await Promise.all(fetchData.map((userData) => { \n    return userData.json()\n  }))\n  userStats = userStats.map(stat => {\n    return {\n      name: stat.user,\n      totalXP: stat.total_xp\n    }\n  }).sort((apple, banana) => {\n    return banana.totalXP - apple.totalXP\n  })\n   \n\n  return {\n    data: userStats\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}